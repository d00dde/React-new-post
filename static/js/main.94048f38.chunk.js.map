{"version":3,"sources":["components/header/index.js","components/new-post-service-context/index.js","components/hoc/with-new-post-service.js","utils/compose.js","actions/cities-actions.js","actions/warehouses-actions.js","components/cities-input/index.js","components/spinner/index.js","components/spinner/spinner.js","components/pagination/index.js","components/warehouses/index.js","services/gmap-service.js","components/map/index.js","components/details/index.js","components/app/index.js","components/app/app.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/cities-reducer.js","reducers/warehouses-reducer.js","reducers/index.js","store.js","index.js","services/new-post-service.js","components/header/logo.jpg"],"names":["Header","className","src","logo","alt","React","createContext","NewPostServiceProvider","Provider","NewPostServiceConsumer","Consumer","withNewPostService","Wrapped","props","newPostService","compose","funcs","component","reduceRight","wrapped","f","fetchCitySuccess","city","type","payload","fetchCities","request","dispatch","name","then","data","Array","isArray","catch","error","fetchCitiesFailure","fetchWarehouses","cityName","getWarehouses","fetchWarehousesFailure","clearWarehouse","CitiesInput","state","filter","value","inputCityName","e","search","target","compare","toLowerCase","trim","cities","i","length","startsWith","push","match","includes","setState","isSubmit","key","cityChoosed","firstChild","fetchCity","this","searchHint","map","item","onClick","label","onChange","onKeyPress","Component","connect","citiesInput","ownProps","getCities","getCity","Spinner","Pagination","onClickHandler","parentElement","classList","contains","onPageChecked","getAttribute","drawPages","totalPages","activePage","scale","begin","end","pages","showPages","href","number","classLeft","classRight","Warehouses","count","chooseWarehouse","SiteKey","warehouse","warehouses","find","warehouseChoosed","getPage","slice","newPage","prevProps","prevCityName","Description","loading","page","Math","ceil","warehousesList","ShortAddressRu","Number","DescriptionRu","GmapService","_map","_marker","setCenter","center","window","google","maps","Map","document","getElementById","zoom","setMap","Marker","position","lat","lng","gmap","id","Details","Schedule","InternationalShipping","PlaceMaxWeightAllowed","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","App","Latitude","Longitude","ErrorIndicator","console","message","ErrorBoundry","hasError","errorInfo","isError","log","children","citiesReducer","action","undefined","warehousesReducer","reducer","store","createStore","APIKey","urlBase","getResource","params","a","body","JSON","stringify","apiKey","fetch","method","headers","res","ok","Error","status","json","getDistricts","modelName","calledMethod","districts","methodProperties","FindByString","Language","CityName","ReactDOM","render","module","exports"],"mappings":"iNAeeA,EAXA,WACb,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,SACrC,yBAAKH,UAAU,SAAf,wL,+CCNqCI,IAAMC,iBADhCC,E,EAAXC,SACUC,E,EAAVC,SCeOC,EAfY,kBAAM,SAACC,GAC9B,OAAO,SAACC,GACJ,OACI,kBAACJ,EAAD,KAEQ,SAACK,GACD,OAAQ,kBAACF,EAAD,iBAAaC,EAAb,CACQC,eAAgBA,UCLrCC,EALC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,YACT,SAACC,EAASC,GAAV,OAAgBA,EAAED,IAAUF,KCiC5BI,EAAmB,SAACC,GACzB,MAAO,CACNC,KAAM,qBACNC,QAASF,IAIIG,EAtBK,SAACC,EAASC,GAAV,OAAuB,SAACC,GAC3CD,EApBO,CACNJ,KAAK,yBAoBNG,EAAQE,GACLC,KAAK,SAACC,GACFC,MAAMC,QAAQF,GAChBH,EAlBE,CACNJ,KAAK,uBACLC,QAgBgCM,IAE5BH,EAASN,EAAiBS,MAE5BG,MAAM,SAACC,GACPP,EAjBuB,SAACO,GAC3B,MAAO,CACNX,KAAK,uBACLC,QAASU,GAcEC,CAAmBD,QCV1BE,EAAkB,SAACtB,EAAgBa,GAAjB,OAA8B,SAACU,GACtDV,EApBO,CACNJ,KAAK,6BAoBNT,EAAewB,cAAcD,GAC1BR,KAAK,SAACC,GACJH,EAjBE,CACNJ,KAAK,2BACLC,QAeoCM,MAElCG,MAAM,SAACC,GACPP,EAd2B,SAACO,GAC/B,MAAO,CACNX,KAAK,2BACLC,QAASU,GAWEK,CAAuBL,QAW9BM,EAAiB,WACtB,MAAO,CACNjB,KAAK,oB,QC/BDkB,E,2MAELC,MAAQ,CACPC,OAAQ,GACRC,MAAO,I,EA8BRC,cAAgB,SAACC,GAChB,IAAMC,EAASD,EAAEE,OAAOJ,MAClBK,EAAUF,EAAOG,cAAcC,OAC/BR,EAAS,GACTS,EAAS,EAAKvC,MAAMuC,OAC1B,GAAe,KAAZH,EAAe,CACjB,IAAI,IAAII,EAAI,EAAGA,EAAID,EAAOE,SACrBF,EAAOC,GAAGH,cAAcK,WAAWN,IACtCN,EAAOa,KAAKJ,EAAOC,MAChBV,EAAOW,OAAS,IAHaD,KAOlC,GAAGV,EAAOW,QAAU,EACnB,IAAI,IAAID,EAAI,EAAGA,EAAID,EAAOE,SACrBF,EAAOC,GAAGH,cAAcO,MAAMR,KAC7BN,EAAOe,SAASN,EAAOC,KAC1BV,EAAOa,KAAKJ,EAAOC,OACjBV,EAAOW,OAAS,IAJaD,MASpC,EAAKM,SAAS,CACbhB,OAAQA,EACRC,MAAOG,K,EAITa,SAAW,SAACd,GACE,UAAVA,EAAEe,KAEmB,KAArB,EAAKnB,MAAME,OAEV,EAAK/B,MAAMuC,OAAOM,SAAS,EAAKhB,MAAME,QAE1C,EAAKkB,YAAY,EAAKpB,MAAME,Q,EAG7BkB,YAAc,SAACxC,GACd,IAAIe,EAEHA,EADEf,EAAK0B,OACI1B,EAAK0B,OAAOe,WAAWjC,KAEvBR,EACZ,EAAKqC,SAAS,CACbhB,OAAQ,GACRC,MAAOP,IAER,EAAKxB,MAAMmD,UAAU3B,GACrB,EAAKxB,MAAM2B,kB,mFA5EXyB,KAAKpD,MAAMY,gB,+BAGD,IAAD,OACHyC,EAAaD,KAAKvB,MAAMC,OAAOwB,IAAI,SAACC,GACzC,OAAO,wBAAIP,IAAKO,EACVC,QAAS,SAACD,GAAD,OAAU,EAAKN,YAAYM,KAClCA,KAGT,OACC,yBAAKnE,UAAU,eACb,kBAAC,YAAD,CACCA,UAAU,aACVqE,MAAM,kFACNC,SAAUN,KAAKpB,cACfD,MAAQqB,KAAKvB,MAAME,MACnB4B,WAAYP,KAAKL,UACjB,wBAAI3D,UAAU,QACZiE,S,GA3BkBO,aA0GX1D,IACNJ,IACA+D,YAjBe,SAAChC,GACxB,MAAO,CACNU,OAAQV,EAAMiC,YAAYvB,OAC1B9B,KAAMoB,EAAMiC,YAAYrD,OAIA,SAACK,EAAUiD,GACpC,MAAO,CACNnD,YAAaA,EAAYmD,EAAS9D,eAAe+D,UAAWlD,GAC5DqC,UAAWvC,EAAYmD,EAAS9D,eAAegE,QAASnD,GACxDa,eAAgBA,KAIHzB,CAIJ0B,GCrHIsC,ECAC,WACZ,OACE,yBAAK9E,UAAU,WAAf,eC+CS+E,G,iNAxBbC,eAAiB,SAACnC,GACZA,EAAEE,OAAOkC,cAAcC,UAAUC,SAAS,aAE1CtC,EAAEE,OAAOkC,cAAcC,UAAUC,SAAS,WAE9C,EAAKvE,MAAMwE,cAAcvC,EAAEE,OAAOsC,aAAa,Y,EAGjDC,UAAY,SAACC,EAAYC,EAAYC,GACnC,OAAGF,EAAoB,EAANE,EAAU,EACtBD,EAAaC,EAAQ,EACf,CAACC,MAAO,EAAGC,IAAY,EAANF,EAAU,GAC9BD,EAAaC,GAASF,EACnB,CAACG,MAAOH,GAAoB,EAANE,EAAU,GAAIE,IAAKJ,GAEzC,CAACG,MAAOF,EAAaC,EAAQE,IAAKH,EAAaC,EAAQ,GAIzD,CAACC,MAAO,EAAGC,IAAKJ,I,wEA1ChB,IAAD,SAC2BvB,KAAKpD,MAAhC2E,EADA,EACAA,WAAYC,EADZ,EACYA,WACpB,GAAkB,IAAfD,EACD,OAAO,KAGT,IAFA,IAAIK,EAAQ,GACNC,EAAY7B,KAAKsB,UAAUC,EAAYC,EAAY,GAChDpC,EAAIyC,EAAUH,MAAOtC,EAAIyC,EAAUF,IAAKvC,IAAK,CACpD,IAAMpD,EAAYoD,IAAMoC,EAAa,SAAW,eAChDI,EAAMrC,KAAK,wBAAIK,IAAKR,EACLpD,UAAWA,EACXoE,QAAS,SAACvB,GAAD,OAAO,EAAKmC,eAAenC,KAAI,uBAAGiD,KAAK,IAAIC,OAAQ3C,GAAIA,EAAI,KAGrF,IAAM4C,EAA2B,IAAfR,EAAmB,WAAW,eAC1CS,EAAaT,IAAeD,EAAa,EAAI,WAAW,eAC9D,OACE,wBAAIvF,UAAU,cACZ,wBAAIA,UAAWgG,EAAW5B,QAAS,SAACvB,GAAD,OAAO,EAAKmC,eAAenC,KAAI,uBAAGiD,KAAK,IAAIC,OAAQ,MAAO,MAC5FH,EACD,wBAAI5F,UAAWiG,EAAY7B,QAAS,SAACvB,GAAD,OAAO,EAAKmC,eAAenC,KAAI,uBAAGiD,KAAK,IAAIC,OAAQ,MAAO,W,GApB7EvB,cCQnB0B,G,iNAELzD,MAAQ,CACP0D,MAAO,GACPX,WAAY,G,EA2CbY,gBAAkB,SAACC,GAClB,IAAMC,EAAY,EAAK1F,MAAM2F,WAAWC,KAAK,SAACF,GAAD,OAAeA,EAAUD,UAAYA,IAClF,EAAKzF,MAAM6F,iBAAiBH,I,EAG7BI,QAAU,SAACH,EAAYJ,EAAOJ,GAC7B,OAAOQ,EAAWI,MAAMR,EAAMJ,EAAQI,GAAOJ,EAAO,K,EAGrDX,cAAgB,SAACW,GAChB,IAAIa,EACJ,OAAQb,GACP,IAAK,KACJa,EAAU,EAAKnE,MAAM+C,WAAa,EAClC,MACD,IAAK,KACJoB,EAAU,EAAKnE,MAAM+C,WAAa,EAClC,MACD,QACCoB,GAAWb,EAEb,EAAKrC,SAAS,CACb8B,WAAYoB,K,kFA9DMC,GACnB,GAAI7C,KAAKpD,MAAMS,KAAKQ,KAApB,CAEA,IAAMiF,EAAeD,EAAUxF,KAAKQ,KAAOgF,EAAUxF,KAAKQ,KAAK,GAAGkF,YAAc,GAC1E3E,EAAW4B,KAAKpD,MAAMS,KAAKQ,KAAK,GAAGkF,YACtCD,IAAiB1E,IAEpB4B,KAAKpD,MAAMuB,gBAAgBC,GAC3B4B,KAAKN,SAAS,CAAC8B,WAAY,Q,+BAGjB,IAAD,OACT,IAAIxB,KAAKpD,MAAMS,KAAKQ,KACnB,OAAO,KACR,GAAGmC,KAAKpD,MAAMoG,QACb,OAAO,kBAAC,EAAD,MACP,IAAMC,EAAOjD,KAAK0C,QAAU1C,KAAKpD,MAAM2F,WAChCvC,KAAKvB,MAAM0D,MACXnC,KAAKvB,MAAM+C,YACZD,EAAa2B,KAAKC,KAAKnD,KAAKpD,MAAM2F,WAAWlD,OAAOW,KAAKvB,MAAM0D,OAC/DiB,EAAiBH,EAAK/C,IAAI,YAA0C,IAAvCmC,EAAsC,EAAtCA,QAASgB,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC5D,OAAO,uBAAGtH,UAAU,kBAChB8F,KAAK,IACLlC,IAAKyC,EACLjC,QAAS,kBAAM,EAAKgC,gBAAgBC,KAHjC,SAIFiB,EAJE,IAIOD,KAEf,OACC,yBAAKrH,UAAU,kBACd,4BAAKgE,KAAKpD,MAAMS,KAAKQ,KAAK,GAAG0F,eAC7B,yBAAKvH,UAAU,cACboH,GAEF,kBAAC,EAAD,CAAY7B,WAAaA,EACtBC,WAAYxB,KAAKvB,MAAM+C,WACvBJ,cAAepB,KAAKoB,qB,GA1CFZ,cA2FV1D,IACNJ,IACA+D,YAlBe,SAAChC,GACxB,MAAO,CACN8D,WAAY9D,EAAM8D,WAAWA,WAC7BlF,KAAMoB,EAAMiC,YAAYrD,KACxB2F,QAASvE,EAAM8D,WAAWS,QAC1BV,UAAW7D,EAAM8D,WAAWD,YAIJ,SAAC5E,EAAUiD,GACpC,MAAO,CACNxC,gBAAiBA,EAAgBwC,EAAS9D,eAAgBa,GAC1D+E,iBAAmB,SAACH,GAAD,OAAe5E,ELnEX,SAAC4E,GACzB,MAAO,CACNhF,KAAK,oBACLC,QAAS+E,GKgEkCG,CAAiBH,QAI/CxF,CAIJoF,GC1GUsB,EAKnB,aAAgB,IAAD,gCAHfC,KAAO,KAGQ,KAFfC,QAAU,KAEK,KAWfC,UAAY,SAACC,GACX,EAAKH,KAAO,IAAII,OAAOC,OAAOC,KAAKC,IAAIC,SAASC,eAAe,OAAQ,CACrEC,KAAM,GACNP,OAAQA,IAEP,EAAKF,SACN,EAAKA,QAAQU,OAAO,MACtB,EAAKV,QAAU,IAAIG,OAAOC,OAAOC,KAAKM,OAAO,CAC3CC,SAAUV,EACV1D,IAAK,EAAKuD,QAnBZzD,KAAKyD,KAAO,IAAII,OAAOC,OAAOC,KAAKC,IAAIC,SAASC,eAAe,OAAQ,CACrEC,KAAM,GACNP,OAAQ,CACNW,IAAK,UACLC,IAAK,cCSER,G,kMAZXhE,KAAKyE,KAAO,IAAIjB,I,+BAMhB,OAFGxD,KAAKpD,MAAMgH,QACZ5D,KAAKyE,KAAKd,UAAU3D,KAAKpD,MAAMgH,QAE/B,yBAAKc,GAAG,Y,GAVIlE,cCgCHmE,G,MAhCC,SAAC/H,GACf,IAAIA,EAAM0F,UAAUD,QAClB,OAAO,KAFgB,MAQjBzF,EAAM0F,UALNgB,EAHiB,EAGjBA,OACND,EAJuB,EAIvBA,eACAuB,EALuB,EAKvBA,SACAC,EANuB,EAMvBA,sBACAC,EAPuB,EAOvBA,sBAEF,OACE,yBAAK9I,UAAU,WACb,6FAAiBsH,GACjB,sEAAcD,GACd,yBAAKrH,UAAU,OACb,yBAAKA,UAAU,UAAf,8EACA,wBAAIA,UAAU,UACZ,6CAAS4I,EAASG,QAClB,6CAASH,EAASI,SAClB,6CAASJ,EAASK,WAClB,6CAASL,EAASM,UAClB,6CAASN,EAASO,QAClB,6CAASP,EAASQ,UAClB,6CAASR,EAASS,UAGtB,mLAA2D,IAA1BR,EAA8B,eAAK,sBACpE,gMAAoCC,EAApC,qBC5BSQ,G,MC0CA7E,YANS,SAAChC,GACvB,MAAO,CACL6D,UAAW7D,EAAM8D,WAAWD,YAIjB7B,CA9BH,SAAC7D,GACX,IAAIgH,EAOJ,OAJKA,IAFDhH,EAAM0F,UAAUD,SAEN,CACZkC,KAAM3H,EAAM0F,UAAUiD,SACtBf,KAAM5H,EAAM0F,UAAUkD,WAGvB,yBAAKxJ,UAAU,iBACZ,kBAAC,EAAD,MACA,yBAAKA,UAAU,sBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAK4H,OAAQA,IACb,kBAAC,EAAD,CAAStB,UAAa1F,EAAM0F,iBC7BrBmD,G,MCiBAhF,YANS,SAAC,GACvB,MAAO,CACLxC,MAFmC,EAAZA,QAMZwC,CAfQ,SAAC7D,GAEtB,OADA8I,QAAQzH,MAAMrB,EAAMqB,OAEhB,yBAAKjC,UAAU,mBACZY,EAAMqB,MAAM0H,YCNNC,E,2MCEXnH,MAAM,CACFoH,UAAU,G,iFAGI5H,EAAO6H,GACrB9F,KAAKN,SAAS,CAACqG,SAAS,IACxBL,QAAQM,IAAI,wBAAyB/H,GACrCyH,QAAQM,IAAI,eAAgBF,K,+BAI5B,OAAG9F,KAAKvB,MAAMoH,SACH,kBAAC,EAAD,MACJ7F,KAAKpD,MAAMqJ,a,GAdgBzF,a,kpCCF1C,IAqCe0F,EArCO,SAACzH,EAAO0H,GAC7B,QAAaC,IAAV3H,EACF,MAAO,CACNU,OAAQ,GACR6D,SAAS,EACT/E,OAAO,EACPZ,KAAM,IAGR,OAAO8I,EAAO7I,MACb,IAAK,uBACH,OAAO,KACHmB,EAAMiC,YADV,CAECsC,SAAS,IAEX,IAAK,uBACJ,OAAO,KACHvE,EAAMiC,YADV,CAECsC,SAAS,EACT7D,OAAQgH,EAAO5I,UAEjB,IAAK,uBACJ,OAAO,KACHkB,EAAMiC,YADV,CAECsC,SAAS,EACT7D,OAAQ,GACRlB,MAAOkI,EAAO5I,UAEhB,IAAK,qBACJ,YACIkB,EAAMiC,YADV,CAECrD,KAAM8I,EAAO5I,UAEhB,QAAS,OAAOkB,EAAMiC,c,mjBClCxB,IA2Ce2F,EA3CW,SAAC5H,EAAO0H,GACjC,QAAaC,IAAV3H,EACF,MAAO,CACN8D,WAAY,GACZS,SAAS,EACT/E,OAAO,EACPqE,UAAW,IAGb,OAAO6D,EAAO7I,MACb,IAAK,2BACJ,OAAO,KACFmB,EAAM8D,WADX,CAEES,SAAS,IAEX,IAAK,2BACJ,OAAO,KACHvE,EAAM8D,WADV,CAECS,SAAS,EACTT,WAAY4D,EAAO5I,QAAQM,OAE7B,IAAK,2BACJ,OAAO,KACHY,EAAM8D,WADV,CAECS,SAAS,EACTT,WAAY,GACZtE,MAAOkI,EAAO5I,UAEf,IAAK,oBACJ,YACEkB,EAAM8D,WADR,CAEDD,UAAW6D,EAAO5I,UAEpB,IAAK,kBACJ,OAAO,KACHkB,EADJ,CAEC6D,UAAW,KAGb,QAAS,OAAO7D,EAAM8D,aC7BT+D,EAPC,SAAC7H,EAAO0H,GACvB,MAAO,CACNzF,YAAawF,EAAczH,EAAO0H,GAClC5D,WAAY8D,EAAkB5H,EAAO0H,KCAxBI,EAFDC,YAAYF,GCQpBzJ,GAAiB,I,iDCVtB4J,OAAS,mC,KACTC,QAAU,uC,KAETC,Y,sCAAc,WAAOC,GAAP,iBAAAC,EAAA,4DACNC,EAAOC,KAAKC,UAAL,KAAmBJ,EAAnB,CAA2BK,OAAQ,EAAKR,UADzC,SAGMS,MAAM,EAAKR,QAChB,CACES,OAAQ,OACRL,KAAKA,EACLM,QAAQ,CACP,eAAgB,sBARpB,WAGNC,EAHM,QAaHC,GAbG,sBAcJ,IAAIC,MAAJ,oCAAuCF,EAAIG,SAdvC,uBAgBCH,EAAII,OAhBL,iF,2DAmBdC,a,qBAAe,4BAAAb,EAAA,qEACU,EAAKF,YAAY,CACxCgB,UAAW,UACXC,aAAc,aAHD,cACRC,EADQ,yBAKPA,EAAUhK,MALH,yC,KAQf+C,U,qBAAY,4BAAAiG,EAAA,qEACU,EAAKF,YAAY,CACrCgB,UAAW,UACXC,aAAc,cAHJ,cACLzI,EADK,yBAMJA,EAAOtB,KAAKqC,IAAI,SAAC7C,GAAD,OAAUA,EAAK0F,eAN3B,yC,KASZlC,Q,sCAAU,WAAOlD,GAAP,eAAAkJ,EAAA,qEACW,EAAKF,YAAY,CAClCgB,UAAW,iBACXC,aAAc,YACdE,iBAAkB,CAChBC,aAAcpK,KALV,cACFN,EADE,yBAQDA,GARC,yC,2DAWVgB,c,sCAAgB,WAAOV,GAAP,eAAAkJ,EAAA,qEACW,EAAKF,YAAY,CACxCgB,UAAW,iBACXC,aAAc,gBACdE,iBAAkB,CAChBE,SAAU,KACVC,SAAUtK,KANA,cACR4E,EADQ,yBASPA,GATO,yC,uDDtClB2F,IAASC,OACL,kBAAC,IAAD,CAAU5B,MAAOA,GACf,kBAAC,EAAD,KACE,kBAACjK,EAAD,CAAwBqC,MAAO9B,IAC7B,kBAAC,IAAD,KACE,kBAAC,EAAD,UAKNoH,SAASC,eAAe,U,wCExB9BkE,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.94048f38.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\nimport logo from './logo.jpg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className='header'>\r\n      <div className=\"nav-wrapper\">\r\n        <img className='logo' src={logo} alt='logo' />\r\n        <div className='title'>Справочник отделений новой почты</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst { Provider : NewPostServiceProvider,\r\n        Consumer: NewPostServiceConsumer } = React.createContext();\r\n\r\nexport {\r\n    NewPostServiceProvider,\r\n    NewPostServiceConsumer\r\n}\r\n\r\n","import React from 'react';\r\nimport { NewPostServiceConsumer} from '../new-post-service-context';\r\n\r\nconst withNewPostService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <NewPostServiceConsumer>\r\n                {\r\n                    (newPostService) => {\r\n                    return (<Wrapped {...props}\r\n                                    newPostService={newPostService} />);\r\n                    }\r\n                }\r\n            </NewPostServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withNewPostService;","const compose = (...funcs) => (component) => {\r\n  return funcs.reduceRight(\r\n      (wrapped, f) => f(wrapped), component);\r\n};\r\n\r\nexport default compose;","const fetchCitiesRequest = () => {\r\n\treturn {\r\n\t\ttype:'FETCH_CITIES_REQUEST'\r\n\t}\r\n}\r\n\r\nconst fetchCitiesSuccess = (cities) => {\r\n\treturn {\r\n\t\ttype:'FETCH_CITIES_SUCCESS',\r\n\t\tpayload: cities\r\n\t}\r\n}\r\n\r\nconst fetchCitiesFailure = (error) => {\r\n\treturn {\r\n\t\ttype:'FETCH_CITIES_FAILURE',\r\n\t\tpayload: error\r\n\t}\r\n}\r\n\r\nconst fetchCities = (request, dispatch) => (name) => {\r\n\tdispatch(fetchCitiesRequest());\r\n\trequest(name)\r\n\t\t\t.then((data) => {\r\n\t\t\t\t\tif(Array.isArray(data))\r\n\t\t\t\t\t\tdispatch(fetchCitiesSuccess(data));\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tdispatch(fetchCitySuccess(data));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch(fetchCitiesFailure(error));\r\n\t\t\t});\r\n}\r\n\r\n\r\nconst fetchCitySuccess = (city) => {\r\n\treturn {\r\n\t\ttype: 'FETCH_CITY_SUCCESS',\r\n\t\tpayload: city\r\n\t}\r\n}\r\n\r\nexport default fetchCities\r\n","const fetchWarehousesRequest = () => {\r\n\treturn {\r\n\t\ttype:'FETCH_WAREHOUSES_REQUEST'\r\n\t}\r\n}\r\n\r\nconst fetchWarehousesSuccess = (warehouses) => {\r\n\treturn {\r\n\t\ttype:'FETCH_WAREHOUSES_SUCCESS',\r\n\t\tpayload: warehouses\r\n\t}\r\n}\r\n\r\nconst fetchWarehousesFailure = (error) => {\r\n\treturn {\r\n\t\ttype:'FETCH_WAREHOUSES_FAILURE',\r\n\t\tpayload: error\r\n\t}\r\n}\r\n\r\nconst fetchWarehouses = (newPostService, dispatch) => (cityName) => {\r\n\tdispatch(fetchWarehousesRequest());\r\n\tnewPostService.getWarehouses(cityName)\r\n\t\t\t.then((data) => {\r\n\t\t\t\t\t\tdispatch(fetchWarehousesSuccess(data));\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch(fetchWarehousesFailure(error));\r\n\t\t\t});\r\n}\r\n\r\nconst warehouseChoosed = (warehouse) => {\r\n\treturn {\r\n\t\ttype:'WAREHOUSE_CHOOSED',\r\n\t\tpayload: warehouse\r\n\t}\r\n}\r\n\r\nconst clearWarehouse = () => {\r\n\treturn {\r\n\t\ttype:'CLEAR_WAREHOUSE'\r\n\t}\r\n}\r\n\r\nexport {\r\n\twarehouseChoosed,\r\n\tfetchWarehouses,\r\n\tclearWarehouse\r\n}","import React, { Component } from 'react';\r\nimport './cities-input.css'\r\n\r\nimport { withNewPostService } from '../hoc'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils/';\r\nimport { fetchCities, clearWarehouse } from '../../actions';\r\nimport { TextInput } from 'react-materialize';\r\n\r\nclass CitiesInput extends Component {\r\n\r\n\tstate = {\r\n\t\tfilter: [],\r\n\t\tvalue: ''\r\n\t}\r\n\t\r\n\tcomponentDidMount () {\r\n\t\tthis.props.fetchCities();\r\n\t}\r\n\t\r\n\trender () {\r\n\t\tconst searchHint = this.state.filter.map((item) => {\r\n\t\t\treturn <li key={item}\r\n\t\t\t\t\t\t\t\t onClick={(item) => this.cityChoosed(item)}\r\n\t\t\t\t\t\t\t\t >{item}</li>\r\n\t\t})\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className='search-city'>\r\n\t\t\t\t\t<TextInput\r\n\t\t\t\t\t\tclassName='city-input'\r\n\t\t\t\t\t\tlabel='Выберите город'\r\n\t\t\t\t\t\tonChange={this.inputCityName}\r\n\t\t\t\t\t\tvalue ={this.state.value}\r\n\t\t\t\t\t\tonKeyPress={this.isSubmit}>\r\n\t\t\t\t\t\t<ul className='hint'>\r\n\t\t\t\t\t\t\t{searchHint}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</TextInput>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n\tinputCityName = (e) => {\r\n\t\tconst search = e.target.value;\r\n\t\tconst compare = search.toLowerCase().trim();\r\n\t\tconst filter = [];\r\n\t\tconst cities = this.props.cities;\r\n\t\tif(compare !== ''){\r\n\t\t\tfor(let i = 0; i < cities.length; i++){\r\n\t\t\t\tif (cities[i].toLowerCase().startsWith(compare))\r\n\t\t\t\t\tfilter.push(cities[i]);\r\n\t\t\t\tif (filter.length > 5){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(filter.length <= 5){\r\n\t\t\t\tfor(let i = 0; i < cities.length; i++){\r\n\t\t\t\t\tif (cities[i].toLowerCase().match(compare))\r\n\t\t\t\t\t\tif(!filter.includes(cities[i]))\r\n\t\t\t\t\t\t\tfilter.push(cities[i]);\r\n\t\t\t\t\tif (filter.length > 5)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\tfilter: filter,\r\n\t\t\tvalue: search\r\n\t\t});\r\n\t}\r\n\r\n\tisSubmit = (e) => {\r\n\t\tif(e.key !== 'Enter')\r\n\t\t\treturn\r\n\t\tif(this.state.value === '')\r\n\t\t\treturn\r\n\t\tif(!this.props.cities.includes(this.state.value))\r\n\t\t\treturn\r\n\t\tthis.cityChoosed(this.state.value);\r\n\t}\r\n\r\n\tcityChoosed = (city) => {\r\n\t\tlet cityName;\r\n\t\tif(city.target)\r\n\t\t\tcityName = city.target.firstChild.data;\r\n\t\telse\r\n\t\t\tcityName = city;\r\n\t\tthis.setState({\r\n\t\t\tfilter: [],\r\n\t\t\tvalue: cityName\r\n\t\t});\r\n\t\tthis.props.fetchCity(cityName);\r\n\t\tthis.props.clearWarehouse();\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcities: state.citiesInput.cities,\r\n\t\tcity: state.citiesInput.city\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tfetchCities: fetchCities(ownProps.newPostService.getCities, dispatch),\r\n\t\tfetchCity: fetchCities(ownProps.newPostService.getCity, dispatch),\r\n\t\tclearWarehouse: clearWarehouse\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\t\t\t\t\t\t\t\t\twithNewPostService(),\r\n\t\t\t\t\t\t\t\t\tconnect(mapStateToProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmapActionsToProps)\r\n\t\t\t\t\t\t\t\t\t)(CitiesInput);\r\n\r\n\r\n\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n      <div className='spinner'>...Loading</div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport './pagination.css';\r\n\r\nclass Pagination extends Component {\r\n  render () {\r\n    const { totalPages, activePage } = this.props;\r\n    if(totalPages === 1)\r\n      return null;\r\n    let pages = [];\r\n    const showPages = this.drawPages(totalPages, activePage, 3);\r\n    for (let i = showPages.begin; i < showPages.end; i++) {\r\n      const className = i === activePage ? 'active' : 'waves-effect';\r\n      pages.push(<li key={i}\r\n                     className={className}\r\n                     onClick={(e) => this.onClickHandler(e)}><a href=\"#\" number={i}>{i + 1}</a></li>)\r\n    }\r\n\r\n    const classLeft = activePage === 0 ? 'disabled':'waves-effect';\r\n    const classRight = activePage === totalPages - 1 ? 'disabled':'waves-effect';\r\n    return (\r\n      <ul className=\"pagination\">\r\n        <li className={classLeft} onClick={(e) => this.onClickHandler(e)}><a href=\"#\" number={\"-1\"}>{'<'}</a></li>\r\n        {pages}\r\n        <li className={classRight} onClick={(e) => this.onClickHandler(e)}><a href=\"#\" number={\"+1\"}>{'>'}</a></li>\r\n      </ul>\r\n    )\r\n  }\r\n  onClickHandler = (e) => {\r\n    if (e.target.parentElement.classList.contains('disabled'))\r\n      return;\r\n    if (e.target.parentElement.classList.contains('active'))\r\n      return;\r\n    this.props.onPageChecked(e.target.getAttribute('number'));\r\n  }\r\n\r\n  drawPages = (totalPages, activePage, scale) => {\r\n    if(totalPages > (scale*2 + 1)){\r\n      if(activePage - scale < 0) {\r\n        return {begin: 0, end: (scale*2 + 1)}\r\n      } if (activePage + scale >= totalPages){\r\n        return {begin: totalPages - (scale*2 + 1), end: totalPages }\r\n      } else {\r\n        return {begin: activePage - scale , end: activePage + scale + 1}\r\n      }\r\n    }\r\n    else {\r\n      return {begin: 0, end: totalPages}\r\n    }\r\n  }\r\n}\r\n\r\nexport default Pagination","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport Pagination from '../pagination'\r\nimport './warehouses.css'\r\n\r\n\r\nimport { withNewPostService } from '../hoc'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils/';\r\nimport { fetchWarehouses, warehouseChoosed } from '../../actions';\r\n\r\nclass Warehouses extends Component {\r\n\r\n\tstate = {\r\n\t\tcount: 10,\r\n\t\tactivePage: 0\r\n\t}\r\n\r\n\tcomponentDidUpdate (prevProps) {\r\n\t\tif(!this.props.city.data)\r\n\t\t\treturn;\r\n\t\tconst prevCityName = prevProps.city.data ? prevProps.city.data[0].Description : '';\r\n\t\tconst cityName = this.props.city.data[0].Description;\r\n\t\tif(prevCityName === cityName)\r\n\t\t\treturn;\r\n\t\tthis.props.fetchWarehouses(cityName);\r\n\t\tthis.setState({activePage: 0});\r\n\t}\r\n\r\n\trender () {\r\n\t\tif(!this.props.city.data)\r\n\t\t\treturn null;\r\n\t\tif(this.props.loading)\r\n\t\t\treturn <Spinner />\r\n\t\t\tconst page = this.getPage ( this.props.warehouses,\r\n\t\t\t\t\t\t\t\t\t\tthis.state.count,\r\n\t\t\t\t\t\t\t\t\t\tthis.state.activePage);\r\n\t\t\tconst totalPages = Math.ceil(this.props.warehouses.length/this.state.count);\r\n\t\t\tconst warehousesList = page.map(({ SiteKey, ShortAddressRu, Number }) => {\r\n\t\t\treturn <a className=\"collection-item\"\r\n\t\t\t\t\t  href='#'\r\n\t\t\t\t\t  key={SiteKey}\r\n\t\t\t\t\t  onClick={() => this.chooseWarehouse(SiteKey)}\r\n\t\t\t\t\t>№{Number} {ShortAddressRu}</a>\r\n\t\t});\r\n\t\treturn(\r\n\t\t\t<div className='warehouse-list'>\r\n\t\t\t\t<h4>{this.props.city.data[0].DescriptionRu}</h4>\r\n\t\t\t\t<div className=\"collection\">\r\n\t\t\t\t\t{warehousesList}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Pagination totalPages ={totalPages}\r\n\t\t\t\t\t\t\tactivePage={this.state.activePage}\r\n\t\t\t\t\t\t\tonPageChecked={this.onPageChecked}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tchooseWarehouse = (SiteKey) => {\r\n\t\tconst warehouse = this.props.warehouses.find((warehouse) => warehouse.SiteKey === SiteKey);\r\n\t\tthis.props.warehouseChoosed(warehouse);\r\n\t}\r\n\r\n\tgetPage = (warehouses, count, number) => {\r\n\t\treturn warehouses.slice(count*number, count*(number+1));\r\n\t}\r\n\r\n\tonPageChecked = (number) => {\r\n\t\tlet newPage;\r\n\t\tswitch (number) {\r\n\t\t\tcase '-1':\r\n\t\t\t\tnewPage = this.state.activePage - 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase '+1':\r\n\t\t\t\tnewPage = this.state.activePage + 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tnewPage = +number;\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tactivePage: newPage\r\n\t\t})\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\twarehouses: state.warehouses.warehouses,\r\n\t\tcity: state.citiesInput.city,\r\n\t\tloading: state.warehouses.loading,\r\n\t\twarehouse: state.warehouses.warehouse,\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tfetchWarehouses: fetchWarehouses(ownProps.newPostService, dispatch),\r\n\t\twarehouseChoosed:  (warehouse) => dispatch(warehouseChoosed(warehouse))\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\t\t\t\t\t\t\t\t\twithNewPostService(),\r\n\t\t\t\t\t\t\t\t\tconnect(mapStateToProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmapActionsToProps)\r\n\t\t\t\t\t\t\t\t\t)(Warehouses);\r\n","export default class GmapService {\r\n\r\n  _map = null;\r\n  _marker = null;\r\n\r\n  constructor () {\r\n    this._map = new window.google.maps.Map(document.getElementById('map'), {\r\n      zoom: 17,\r\n      center: {\r\n        lat: 50.354786000000000,\r\n        lng: 30.542884000000000,\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  setCenter = (center) => {\r\n    this._map = new window.google.maps.Map(document.getElementById('map'), {\r\n      zoom: 16,\r\n      center: center\r\n    });\r\n    if(this._marker)\r\n      this._marker.setMap(null);\r\n    this._marker = new window.google.maps.Marker({\r\n      position: center,\r\n      map: this._map,\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport GmapService from '../../services/gmap-service'\r\nimport './map.css';\r\n\r\nclass Map extends Component {\r\n\r\n  componentDidMount () {\r\n    this.gmap = new GmapService ();\r\n  }\r\n\r\n  render () {\r\n    if(this.props.center)\r\n      this.gmap.setCenter(this.props.center);\r\n    return (\r\n      <div id='map'></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map;","import React from'react';\r\n\r\nimport './details.css';\r\n\r\nconst Details = (props) => {\r\n  if(!props.warehouse.SiteKey)\r\n    return null\r\n  const { Number,\r\n    ShortAddressRu,\r\n    Schedule,\r\n    InternationalShipping,\r\n    PlaceMaxWeightAllowed,\r\n      } = props.warehouse;\r\n  return (\r\n    <div className='details'>\r\n      <h5>Отделение № {Number}</h5>\r\n      <div>Адресс: {ShortAddressRu}</div>\r\n      <div className='row'>\r\n        <div className='col l3'>График работы:</div>\r\n        <ul className='col l9'>\r\n          <li>ПН: {Schedule.Monday}</li>\r\n          <li>ВТ: {Schedule.Tuesday}</li>\r\n          <li>СР: {Schedule.Wednesday}</li>\r\n          <li>ЧТ: {Schedule.Thursday}</li>\r\n          <li>ПТ: {Schedule.Friday}</li>\r\n          <li>СБ: {Schedule.Saturday}</li>\r\n          <li>ВС: {Schedule.Sunday}</li>\r\n        </ul>\r\n      </div>\r\n      <div>Международное отправление: {InternationalShipping === 1 ? 'да':'нет'}</div>\r\n      <div>Максимальный вес отправления: {PlaceMaxWeightAllowed} кг.</div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Details;\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport Header from '../header';\r\nimport CitiesInput from '../cities-input';\r\nimport Warehouses from '../warehouses';\r\nimport Map from '../map';\r\nimport Details from '../details';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './app.css';\r\nimport { Button } from 'react-materialize';\r\n\r\n\r\nimport './app.css';\r\n\r\nconst App = (props) => {\r\n  let center;\r\n  if(!props.warehouse.SiteKey)\r\n    center = false;\r\n  else center = {\r\n    lat: +props.warehouse.Latitude,\r\n    lng: +props.warehouse.Longitude\r\n  };\r\n  return (\r\n  \t<div className='container row'>\r\n      <Header />\r\n      <div className=\"col s6 left-column\">\r\n        <CitiesInput />\r\n        <Warehouses />\r\n      </div>\r\n      <div className=\"col s6 right-column\">\r\n        <Map center={center} />\r\n        <Details warehouse = {props.warehouse}/>\r\n      </div>\r\n    </div>\r\n\t);\r\n\t\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    warehouse: state.warehouses.warehouse\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ErrorIndicator = (props) => {\r\n  console.error(props.error);\r\n  return(\r\n      <div className='error-indicator'>\r\n        {props.error.message}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ error }) => {\r\n  return {\r\n    error,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorIndicator);\r\n\r\n\r\n\r\n\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state={\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({isError: true});\r\n        console.log('An error has occurred', error);\r\n        console.log('In component', errorInfo);\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n            return <ErrorIndicator />\r\n        return this.props.children;\r\n    }\r\n}\r\n","\r\nconst citiesReducer = (state, action) => {\r\n\tif(state === undefined) {\r\n\t\treturn {\r\n\t\t\tcities: [],\r\n\t\t\tloading: false,\r\n\t\t\terror: false,\r\n\t\t\tcity: {}\r\n\t\t}\r\n\t}\r\n\tswitch(action.type) {\r\n\t\tcase 'FETCH_CITIES_REQUEST':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: true\r\n\t  \t};\r\n\t  case 'FETCH_CITIES_SUCCESS':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: false,\r\n\t  \t\tcities: action.payload\r\n\t  \t};\r\n\t  case 'FETCH_CITIES_FAILURE':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: false,\r\n\t  \t\tcities: [],\r\n\t  \t\terror: action.payload\r\n\t  \t}\r\n\t  case 'FETCH_CITY_SUCCESS':\r\n\t  \treturn{\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tcity: action.payload\r\n\t  \t}\r\n\t\tdefault: return state.citiesInput;\r\n\t}\r\n}\r\n\r\nexport default citiesReducer;","const warehousesReducer = (state, action) => {\r\n\tif(state === undefined) {\r\n\t\treturn {\r\n\t\t\twarehouses: [],\r\n\t\t\tloading: false,\r\n\t\t\terror: false,\r\n\t\t\twarehouse: {}\r\n\t\t}\r\n\t}\r\n\tswitch(action.type) {\r\n\t\tcase 'FETCH_WAREHOUSES_REQUEST':\r\n\t\t\treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: true\r\n\t  \t};\r\n\t  case 'FETCH_WAREHOUSES_SUCCESS':\r\n\t  \treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: false,\r\n\t  \t\twarehouses: action.payload.data\r\n\t  \t};\r\n\t  case 'FETCH_WAREHOUSES_FAILURE':\r\n\t  \treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: false,\r\n\t  \t\twarehouses: [],\r\n\t  \t\terror: action.payload\r\n\t  \t}\r\n\t  \tcase 'WAREHOUSE_CHOOSED' :\r\n\t  \t\treturn{\r\n\t\t\t\t...state.warehouses,\r\n\t\t\t\twarehouse: action.payload\r\n\t\t\t}\r\n\t\tcase 'CLEAR_WAREHOUSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twarehouse: {}\r\n\t\t\t}\r\n\r\n\t\tdefault: return state.warehouses;\r\n\t}\r\n}\r\n\r\nexport default warehousesReducer;","import citiesReducer from './cities-reducer';\r\nimport warehousesReducer from './warehouses-reducer';\r\n\r\nconst reducer = (state, action) => {\r\n\treturn {\r\n\t\tcitiesInput: citiesReducer(state, action),\r\n\t\twarehouses: warehousesReducer(state, action)\r\n\t}\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport NewPostService from './services/new-post-service';\r\nimport TestNewPostService from './services/test-new-post-service';\r\nimport { NewPostServiceProvider } from './components/new-post-service-context';\r\nimport store from './store';\r\n\r\nconst newPostService = new NewPostService ();\r\n\r\nReactDOM.render (\r\n    <Provider store={store}>\r\n      <ErrorBoundry>\r\n        <NewPostServiceProvider value={newPostService}>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </NewPostServiceProvider>\r\n      </ErrorBoundry>\r\n    </Provider>\r\n    , document.getElementById('root'));","export default class NewPostService {\r\n\r\n APIKey = 'c0ce9a8981a02dab73883469619c32a1';\r\n urlBase = 'https://api.novaposhta.ua/v2.0/json/';\r\n\r\n  getResource = async (params) => {\r\n    const body = JSON.stringify({...params, apiKey: this.APIKey})\r\n\r\n    const res = await fetch(this.urlBase,\r\n    \t\t\t\t\t\t\t\t\t\t\t\t {\r\n        \t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\r\n        \t\t\t\t\t\t\t\t\t\t\tbody:body,\r\n        \t\t\t\t\t\t\t\t\t\t\theaders:{\r\n        \t\t\t\t\t\t\t\t\t\t\t\t'content-type': 'application/json'\r\n        \t\t\t\t\t\t\t\t\t\t\t},\r\n\r\n        \t\t\t});\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getDistricts = async () => {\r\n  \tconst districts = await this.getResource({\r\n  \t\tmodelName: 'Address',\r\n  \t\tcalledMethod: 'getAreas'\r\n  \t});\r\n  \treturn districts.data\r\n  }\r\n\r\n  getCities = async () => {\r\n  \tconst cities = await this.getResource({\r\n  \t\tmodelName: 'Address',\r\n  \t\tcalledMethod: 'getCities',\r\n  \t});\r\n\r\n  \treturn cities.data.map((city) => city.Description);\r\n  }\r\n\r\n  getCity = async (name) => {\r\n    const city = await this.getResource({\r\n      modelName: 'AddressGeneral',\r\n      calledMethod: 'getCities',\r\n      methodProperties: {\r\n        FindByString: name\r\n      }\r\n    });\r\n    return city\r\n  }\r\n\r\n  getWarehouses = async (name) => {\r\n    const warehouses = await this.getResource({\r\n      modelName: 'AddressGeneral',\r\n      calledMethod: 'getWarehouses',\r\n      methodProperties: {\r\n        Language: \"ru\",\r\n        CityName: name\r\n      }\r\n    });\r\n    return warehouses\r\n  }\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.1cf18ac9.jpg\";"],"sourceRoot":""}