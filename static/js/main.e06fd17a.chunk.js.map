{"version":3,"sources":["components/header/index.js","components/new-post-service-context/index.js","components/hoc/with-new-post-service.js","utils/compose.js","actions/createFetch.js","actions/index.js","components/cities-input/index.js","components/spinner/index.js","components/spinner/spinner.js","components/warehouses/clear_list.js","components/hoc/with-pagination.js","components/warehouses/index.js","services/gmap-service.js","components/map/index.js","components/details/index.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/cities-reducer.js","reducers/warehouses-reducer.js","reducers/index.js","store.js","index.js","services/new-post-service.js","components/app/index.js","components/header/logo.jpg"],"names":["Header","className","src","logo","alt","React","createContext","NewPostServiceProvider","Provider","NewPostServiceConsumer","Consumer","withNewPostService","Wrapped","props","newPostService","compose","funcs","component","reduceRight","wrapped","f","name","request","dispatch","type","then","data","payload","catch","error","fetchCities","createFetch","fetchCity","fetchWarehouses","clearWarehouse","CitiesInput","state","filter","value","inputCityName","e","search","target","compare","toLowerCase","trim","cities","i","length","startsWith","push","match","includes","setState","isSubmit","key","cityChoosed","city","cityName","firstChild","this","searchHint","map","item","onClick","label","onChange","onKeyPress","Component","connect","citiesInput","ownProps","getCities","getCity","Spinner","withPagination","List","_paginationClass","_activeClass","_availableClass","_dasabledClass","activePage","createPagination","paginationCount","paginationScale","totalPages","Math","ceil","pages","showPages","drawPages","begin","end","onClickHandler","number","classLeft","classRight","parentElement","classList","contains","onPageChecked","getAttribute","newPage","getPage","count","slice","scale","prevProps","page","Fragment","defaultProps","onClickItem","onCheckType","list","SiteKey","ShortAddressRu","Number","checked","Warehouses","cargoOnly","chooseWarehouse","warehouse","warehouses","find","warehouseChoosed","checkType","flag","prevCityName","Description","loading","PlaceMaxWeightAllowed","getWarehouses","GmapService","_map","_marker","setCenter","center","window","google","maps","Map","document","getElementById","zoom","setMap","Marker","position","lat","lng","gmap","getCenter","id","Latitude","Longitude","Schedule","InternationalShipping","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","ErrorIndicator","console","message","ErrorBoundry","hasError","errorInfo","isError","log","children","citiesReducer","action","undefined","warehousesReducer","reducer","store","createStore","APIKey","urlBase","getResource","params","a","body","JSON","stringify","apiKey","fetch","method","headers","res","ok","Error","status","json","getDistricts","modelName","calledMethod","districts","methodProperties","FindByString","Language","CityName","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.e06fd17a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\nimport logo from './logo.jpg';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className='header'>\r\n      <div className=\"nav-wrapper\">\r\n        <img className='logo' src={logo} alt='logo' />\r\n        <div className='title'>Справочник отделений новой почты</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst { Provider : NewPostServiceProvider,\r\n        Consumer: NewPostServiceConsumer } = React.createContext();\r\n\r\nexport {\r\n    NewPostServiceProvider,\r\n    NewPostServiceConsumer\r\n}\r\n\r\n","import React from 'react';\r\nimport { NewPostServiceConsumer} from '../new-post-service-context';\r\n\r\nconst withNewPostService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <NewPostServiceConsumer>\r\n                {\r\n                    (newPostService) => {\r\n                    return (<Wrapped {...props}\r\n                                    newPostService={newPostService} />);\r\n                    }\r\n                }\r\n            </NewPostServiceConsumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withNewPostService;","const compose = (...funcs) => (component) => {\r\n  return funcs.reduceRight(\r\n      (wrapped, f) => f(wrapped), component);\r\n};\r\n\r\nexport default compose;","export default (name) => (request, dispatch) => (...args) => {\r\n\tdispatch({type:`FETCH_${name}_REQUEST`});\r\n\trequest(...args)\r\n\t\t\t.then((data) => {\r\n\t\t\t\t\t\tdispatch({type:`FETCH_${name}_SUCCESS`, payload: data});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({type:`FETCH_${name}_FAILURE`, payload: error});\r\n\t\t\t});\r\n}","import createFetch from './createFetch';\r\n\r\nconst fetchCities = createFetch('CITIES');\r\nconst fetchCity = createFetch('CITY');\r\nconst fetchWarehouses = createFetch('WAREHOUSES');\r\n\r\nconst warehouseChoosed = (warehouse) => {\r\n\treturn {\r\n\t\ttype:'WAREHOUSE_CHOOSED',\r\n\t\tpayload: warehouse\r\n\t}\r\n}\r\n\r\nconst clearWarehouse = () => {\r\n\treturn {\r\n\t\ttype:'CLEAR_WAREHOUSE'\r\n\t}\r\n}\r\n\r\nexport {\r\n\tfetchCities,\r\n\tfetchCity,\r\n\tfetchWarehouses,\r\n\twarehouseChoosed,\r\n\tclearWarehouse\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport './cities-input.css'\r\n\r\nimport { withNewPostService } from '../hoc'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils/';\r\nimport { fetchCities, fetchCity, clearWarehouse } from '../../actions';\r\nimport { TextInput } from 'react-materialize';\r\n\r\nclass CitiesInput extends Component {\r\n\r\n\tstate = {\r\n\t\tfilter: [],\r\n\t\tvalue: ''\r\n\t}\r\n\t\r\n\tcomponentDidMount () {\r\n\t\tthis.props.fetchCities();\r\n\t}\r\n\t\r\n\trender () {\r\n\t\tconst searchHint = this.state.filter.map((item) => {\r\n\t\t\treturn <li key={item}\r\n\t\t\t\t\t   onClick={(item) => this.cityChoosed(item)}\r\n\t\t\t\t\t>{item}</li>\r\n\t\t})\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<div className='search-city'>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tclassName='city-input'\r\n\t\t\t\t\tlabel='Выберите город'\r\n\t\t\t\t\tonChange={this.inputCityName}\r\n\t\t\t\t\tvalue ={this.state.value}\r\n\t\t\t\t\tonKeyPress={this.isSubmit}>\r\n\t\t\t\t\t<ul className='hint'>\r\n\t\t\t\t\t\t{searchHint}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</TextInput>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n\tinputCityName = (e) => {\r\n\t\tconst search = e.target.value;\r\n\t\tconst compare = search.toLowerCase().trim();\r\n\t\tconst filter = [];\r\n\t\tconst cities = this.props.cities;\r\n\t\tif(compare !== ''){\r\n\t\t\tfor(let i = 0; i < cities.length; i++){\r\n\t\t\t\tif (cities[i].toLowerCase().startsWith(compare))\r\n\t\t\t\t\tfilter.push(cities[i]);\r\n\t\t\t\tif (filter.length > 5){\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(filter.length <= 5){\r\n\t\t\t\tfor(let i = 0; i < cities.length; i++){\r\n\t\t\t\t\tif (cities[i].toLowerCase().match(compare))\r\n\t\t\t\t\t\tif(!filter.includes(cities[i]))\r\n\t\t\t\t\t\t\tfilter.push(cities[i]);\r\n\t\t\t\t\tif (filter.length > 5)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.setState({\r\n\t\t\tfilter: filter,\r\n\t\t\tvalue: search\r\n\t\t});\r\n\t}\r\n\r\n\tisSubmit = (e) => {\r\n\t\tif(e.key !== 'Enter')\r\n\t\t\treturn\r\n\t\tif(this.state.value === '')\r\n\t\t\treturn\r\n\t\tif(!this.props.cities.includes(this.state.value))\r\n\t\t\treturn\r\n\t\tthis.cityChoosed(this.state.value);\r\n\t}\r\n\r\n\tcityChoosed = (city) => {\r\n\t\tlet cityName;\r\n\t\tif(city.target)\r\n\t\t\tcityName = city.target.firstChild.data;\r\n\t\telse\r\n\t\t\tcityName = city;\r\n\t\tthis.setState({\r\n\t\t\tfilter: [],\r\n\t\t\tvalue: cityName\r\n\t\t});\r\n\t\tthis.props.fetchCity(cityName);\r\n\t\tthis.props.clearWarehouse();\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcities: state.citiesInput.cities,\r\n\t\tcity: state.citiesInput.city\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tfetchCities: fetchCities(ownProps.newPostService.getCities, dispatch),\r\n\t\tfetchCity: fetchCity(ownProps.newPostService.getCity, dispatch),\r\n\t\tclearWarehouse,\r\n\t}\r\n}\r\n\r\nexport default compose(withNewPostService(),\r\n\t\t\t\t\t   connect(mapStateToProps,mapActionsToProps)\r\n\t\t\t\t\t   )(CitiesInput);\r\n\r\n\r\n\r\n","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return(\r\n      <div className='spinner'>...Loading</div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport { withPagination } from '../hoc';\r\nimport { Checkbox } from 'react-materialize';\r\nimport './warehouses.css'\r\n\r\nconst List = ({ data, cityName, onClickItem, onCheckType }) => {\r\n\r\n\t\tlet list = data.map(({ SiteKey, ShortAddressRu, Number }) => {\r\n\t\t\treturn <a className=\"collection-item\"\r\n\t\t\t\t\t  key={SiteKey}\r\n\t\t\t\t\t  onClick={() => onClickItem(SiteKey)}\r\n\t\t\t\t\t>№{Number} {ShortAddressRu}</a>\r\n\t\t});\r\n\t\tif(data.length === 0) \r\n\t\t\tlist = <h3>Ничего не найдено.</h3>\r\n\t\treturn(\r\n\t\t\t<div className='warehouse-list'>\r\n\t\t\t\t<div className='row'>\r\n\t\t\t\t\t<div className ='city-name'>{cityName}</div>\r\n\t\t\t\t\t<Checkbox value=\"Red\" \r\n\t\t\t\t\t\t  label=\"Только грузовые\"\r\n\t\t\t\t\t\t  onChange={(e) => onCheckType(e.target.checked)} />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"collection\">\r\n\t\t\t\t\t{list}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default withPagination(List);\r\n","import React, { Component, defaultProps } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './pagination.css';\r\n\r\nexport default (List) => {\r\n  return class Pagination extends Component {\r\n    \r\n    _paginationClass = 'pagination';\r\n    _activeClass = 'active';\r\n    _availableClass = 'waves-effect';\r\n    _dasabledClass = 'disabled'\r\n\r\n    static propTypes = {\r\n      data: PropTypes.array.isRequired,\r\n      paginationCount: PropTypes.number,\r\n      paginationScale: PropTypes.number\r\n    }\r\n\r\n    static defaultProps = {\r\n      paginationCount: 10,\r\n      paginationScale: 2\r\n    }\r\n\r\n    state = {\r\n      activePage: 0,\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n      if(this.props.data !== prevProps.data)\r\n      this.setState({\r\n        activePage: 0\r\n      })\r\n    }\r\n\r\n    render () {\r\n      const page = this.getPage (this.props.data,\r\n                                 this.props.paginationCount,\r\n                                 this.state.activePage);\r\n      return (\r\n\r\n        <React.Fragment>\r\n          <List {...this.props} data={page}/>\r\n          {this.createPagination()}\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    createPagination = () => {\r\n      const { activePage } = this.state;\r\n      const { paginationCount,\r\n              paginationScale,\r\n              data } = this.props;\r\n      const totalPages = Math.ceil(data.length/paginationCount);\r\n      if(totalPages <= 1)\r\n        return null;\r\n      let pages = [];\r\n      const showPages = this.drawPages(totalPages, activePage, paginationScale);\r\n      for (let i = showPages.begin; i < showPages.end; i++) {\r\n        const className = i === activePage ? this._activeClass : this._availableClass;\r\n        pages.push(<li key={i}\r\n                       className={className}\r\n                       onClick={(e) => this.onClickHandler(e)}><a number={i}>{i + 1}</a></li>)\r\n      }\r\n\r\n      const classLeft = activePage === 0 ? this._dasabledClass : this._availableClass;\r\n      const classRight = activePage === totalPages - 1 ? this._dasabledClass : this._availableClass;\r\n      return (\r\n        <ul className={this._paginationClass}>\r\n          <li className={classLeft} onClick={(e) => this.onClickHandler(e)}><a number={\"-1\"}>{'<'}</a></li>\r\n          {pages}\r\n          <li className={classRight} onClick={(e) => this.onClickHandler(e)}><a number={\"+1\"}>{'>'}</a></li>\r\n        </ul>\r\n      )\r\n    }\r\n\r\n    onClickHandler = (e) => {\r\n      if (e.target.parentElement.classList.contains(this._dasabledClass))\r\n        return;\r\n      if (e.target.parentElement.classList.contains(this._activeClass))\r\n        return;\r\n      this.onPageChecked(e.target.getAttribute('number'));\r\n    }\r\n\r\n    onPageChecked = (number) => {\r\n      let newPage;\r\n      switch (number) {\r\n        case '-1':\r\n          newPage = this.state.activePage - 1;\r\n          break;\r\n        case '+1':\r\n          newPage = this.state.activePage + 1;\r\n          break;\r\n        default:\r\n          newPage = +number;\r\n      }\r\n      this.setState({\r\n        activePage: newPage\r\n      });\r\n  }\r\n\r\n    getPage = (data, count, number) => {\r\n    return data.slice(count*number, count*(number+1));\r\n    }\r\n\r\n    drawPages = (totalPages, activePage, scale) => {\r\n      if(totalPages > (scale*2 + 1)){\r\n        if(activePage - scale < 0) {\r\n          return {begin: 0, end: (scale*2 + 1)}\r\n        } if (activePage + scale >= totalPages){\r\n          return {begin: totalPages - (scale*2 + 1), end: totalPages }\r\n        } else {\r\n          return {begin: activePage - scale , end: activePage + scale + 1}\r\n        }\r\n      }\r\n      else {\r\n        return {begin: 0, end: totalPages}\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../spinner';\r\nimport List from './clear_list';\r\n\r\nimport './warehouses.css'\r\n\r\n\r\nimport { withNewPostService } from '../hoc'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from '../../utils/';\r\nimport { fetchWarehouses, warehouseChoosed } from '../../actions';\r\n\r\nclass Warehouses extends Component {\r\n\r\n\tstate = {\r\n\t\tcargoOnly : false\r\n\t}\r\n\r\n\tcomponentDidUpdate (prevProps) {\r\n\t\tif(!this.props.city.data)\r\n\t\t\treturn;\r\n\t\tconst prevCityName = prevProps.city.data ? prevProps.city.data[0].Description : '';\r\n\t\tconst cityName = this.props.city.data[0].Description;\r\n\t\tif(prevCityName === cityName)\r\n\t\t\treturn;\r\n\t\tthis.props.fetchWarehouses(cityName);\r\n\t\tthis.checkType(false);\r\n\r\n\t}\r\n\r\n\trender () {\r\n\t\tif(!this.props.city.data)\r\n\t\t\treturn null;\r\n\t\tif(this.props.loading)\r\n\t\t\treturn <Spinner />\r\n\t\tlet warehouses = this.props.warehouses;\r\n\t\tif(this.state.cargoOnly)\r\n\t\t\twarehouses = this.props.warehouses.filter(({ PlaceMaxWeightAllowed }) => +PlaceMaxWeightAllowed > 900);\r\n\t\treturn <List data={warehouses}\r\n\t\t\t\t\t cityName={this.props.city.data[0].Description}\r\n\t\t\t\t\t onClickItem={this.chooseWarehouse}\r\n\t\t\t\t\t onCheckType={this.checkType}/>\r\n\t}\r\n\r\n\tchooseWarehouse = (SiteKey) => {\r\n\t\tconst warehouse = this.props.warehouses.find((warehouse) => warehouse.SiteKey === SiteKey);\r\n\t\tthis.props.warehouseChoosed(warehouse);\r\n\t}\r\n\r\n\tcheckType = (flag) => {\r\n\t\tthis.setState({cargoOnly : flag})\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\twarehouses: state.warehouses.warehouses,\r\n\t\tcity: state.citiesInput.city,\r\n\t\tloading: state.warehouses.loading,\r\n\t\twarehouse: state.warehouses.warehouse,\r\n\t}\r\n}\r\n\r\nconst mapActionsToProps = (dispatch, ownProps) => {\r\n\treturn {\r\n\t\tfetchWarehouses: fetchWarehouses(ownProps.newPostService.getWarehouses, dispatch),\r\n\t\twarehouseChoosed:  (warehouse) => dispatch(warehouseChoosed(warehouse))\r\n\t}\r\n}\r\n\r\nexport default compose(withNewPostService(),\r\n\t\t\t\t\t\tconnect(mapStateToProps,mapActionsToProps)\r\n\t\t\t\t\t  )(Warehouses);\r\n","export default class GmapService {\r\n\r\n  _map = null;\r\n  _marker = null;\r\n\r\n  constructor () {\r\n    this._map = new window.google.maps.Map(document.getElementById('map'), {\r\n      zoom: 17,\r\n      center: {\r\n        lat: 50.354786000000000,\r\n        lng: 30.542884000000000,\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  setCenter = (center) => {\r\n    if(!center)\r\n      return;\r\n    this._map = new window.google.maps.Map(document.getElementById('map'), {\r\n      zoom: 16,\r\n      center: center\r\n    });\r\n    if(this._marker)\r\n      this._marker.setMap(null);\r\n    this._marker = new window.google.maps.Marker({\r\n      position: center,\r\n      map: this._map,\r\n    });\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport GmapService from '../../services/gmap-service'\r\nimport './map.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Map extends Component {\r\n\r\n  componentDidMount () {\r\n    this.gmap = new GmapService ();\r\n  }\r\n\r\n  componentDidUpdate () {\r\n    this.gmap.setCenter(this.getCenter(this.props.warehouse));\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id='map'></div>\r\n    )\r\n  }\r\n\r\n  getCenter (warehouse) {\r\n    if(!warehouse.SiteKey)\r\n      return false;\r\n    return {\r\n      lat: +warehouse.Latitude,\r\n      lng: +warehouse.Longitude\r\n    };\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    warehouse: state.warehouses.warehouse\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Map);","import React from'react';\r\nimport './details.css';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst Details = (props) => {\r\n  if(!props.warehouse.SiteKey)\r\n    return null\r\n  const { Number,\r\n    ShortAddressRu,\r\n    Schedule,\r\n    InternationalShipping,\r\n    PlaceMaxWeightAllowed,\r\n      } = props.warehouse;\r\n  return (\r\n    <div className='details'>\r\n      <h5>Отделение № {Number}</h5>\r\n      <div>Адресс: {ShortAddressRu}</div>\r\n      <div className='row'>\r\n        <div className='col l3'>График работы:</div>\r\n        <ul className='col l9'>\r\n          <li>ПН: {Schedule.Monday}</li>\r\n          <li>ВТ: {Schedule.Tuesday}</li>\r\n          <li>СР: {Schedule.Wednesday}</li>\r\n          <li>ЧТ: {Schedule.Thursday}</li>\r\n          <li>ПТ: {Schedule.Friday}</li>\r\n          <li>СБ: {Schedule.Saturday}</li>\r\n          <li>ВС: {Schedule.Sunday}</li>\r\n        </ul>\r\n      </div>\r\n      <div>Международное отправление: {InternationalShipping === 1 ? 'да':'нет'}</div>\r\n      <div>Максимальный вес отправления: {PlaceMaxWeightAllowed} кг.</div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    warehouse: state.warehouses.warehouse,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Details);\r\n","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport { connect } from 'react-redux';\r\n\r\nconst ErrorIndicator = (props) => {\r\n  console.error(props.error);\r\n  return(\r\n      <div className='error-indicator'>\r\n        {props.error.message}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = ({ error }) => {\r\n  return {\r\n    error,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ErrorIndicator);\r\n\r\n\r\n\r\n\r\n","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n    state={\r\n        hasError: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({isError: true});\r\n        console.log('An error has occurred', error);\r\n        console.log('In component', errorInfo);\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError)\r\n            return <ErrorIndicator />\r\n        return this.props.children;\r\n    }\r\n}\r\n","\r\nconst citiesReducer = (state, action) => {\r\n\tif(state === undefined) {\r\n\t\treturn {\r\n\t\t\tcities: [],\r\n\t\t\tloading: false,\r\n\t\t\terror: false,\r\n\t\t\tcity: {}\r\n\t\t}\r\n\t}\r\n\tswitch(action.type) {\r\n\t\tcase 'FETCH_CITIES_REQUEST':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: true\r\n\t  \t};\r\n\t  case 'FETCH_CITIES_SUCCESS':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: false,\r\n\t  \t\tcities: action.payload\r\n\t  \t};\r\n\t  case 'FETCH_CITIES_FAILURE':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: false,\r\n\t  \t\tcities: [],\r\n\t  \t\terror: action.payload\r\n\t  \t}\r\n\t  case 'FETCH_CITY_REQUEST':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: true\r\n\t  \t};\r\n\t  case 'FETCH_CITY_SUCCESS':\r\n\t  \treturn{\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tcity: action.payload\r\n\t  \t}\r\n\t  case 'FETCH_CITY_FAILURE':\r\n\t  \treturn {\r\n\t  \t\t...state.citiesInput,\r\n\t  \t\tloading: false,\r\n\t  \t\tcity: {},\r\n\t  \t\terror: action.payload\r\n\t  \t}\r\n\t\tdefault: return state.citiesInput;\r\n\t}\r\n}\r\n\r\nexport default citiesReducer;","const warehousesReducer = (state, action) => {\r\n\tif(state === undefined) {\r\n\t\treturn {\r\n\t\t\twarehouses: [],\r\n\t\t\tloading: false,\r\n\t\t\terror: false,\r\n\t\t\twarehouse: {}\r\n\t\t}\r\n\t}\r\n\tswitch(action.type) {\r\n\t\tcase 'FETCH_WAREHOUSES_REQUEST':\r\n\t\t\treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: true\r\n\t  \t};\r\n\t  case 'FETCH_WAREHOUSES_SUCCESS':\r\n\t  \treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: false,\r\n\t  \t\twarehouses: action.payload.data\r\n\t  \t};\r\n\t  case 'FETCH_WAREHOUSES_FAILURE':\r\n\t  \treturn {\r\n\t  \t\t...state.warehouses,\r\n\t  \t\tloading: false,\r\n\t  \t\twarehouses: [],\r\n\t  \t\terror: action.payload\r\n\t  \t}\r\n\t  \tcase 'WAREHOUSE_CHOOSED' :\r\n\t  \t\treturn{\r\n\t\t\t\t...state.warehouses,\r\n\t\t\t\twarehouse: action.payload\r\n\t\t\t}\r\n\t\tcase 'CLEAR_WAREHOUSE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twarehouse: {}\r\n\t\t\t}\r\n\r\n\t\tdefault: return state.warehouses;\r\n\t}\r\n}\r\n\r\nexport default warehousesReducer;","import citiesReducer from './cities-reducer';\r\nimport warehousesReducer from './warehouses-reducer';\r\n\r\nconst reducer = (state, action) => {\r\n\t//console.log(action.type);\r\n\treturn {\r\n\t\tcitiesInput: citiesReducer(state, action),\r\n\t\twarehouses: warehousesReducer(state, action)\r\n\t}\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\n\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport NewPostService from './services/new-post-service';\r\nimport TestNewPostService from './services/test-new-post-service';\r\nimport { NewPostServiceProvider } from './components/new-post-service-context';\r\nimport store from './store';\r\n\r\nconst newPostService = new NewPostService ();\r\n\r\nReactDOM.render (\r\n    <Provider store={store}>\r\n      <ErrorBoundry>\r\n        <NewPostServiceProvider value={newPostService}>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </NewPostServiceProvider>\r\n      </ErrorBoundry>\r\n    </Provider>\r\n    , document.getElementById('root'));","export default class NewPostService {\r\n\r\n APIKey = 'c0ce9a8981a02dab73883469619c32a1';\r\n urlBase = 'https://api.novaposhta.ua/v2.0/json/';\r\n\r\n  getResource = async (params) => {\r\n    const body = JSON.stringify({...params, apiKey: this.APIKey})\r\n\r\n    const res = await fetch(this.urlBase,\r\n    \t\t\t\t\t\t\t\t\t\t\t\t {\r\n        \t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\r\n        \t\t\t\t\t\t\t\t\t\t\tbody:body,\r\n        \t\t\t\t\t\t\t\t\t\t\theaders:{\r\n        \t\t\t\t\t\t\t\t\t\t\t\t'content-type': 'application/json'\r\n        \t\t\t\t\t\t\t\t\t\t\t},\r\n\r\n        \t\t\t});\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getDistricts = async () => {\r\n  \tconst districts = await this.getResource({\r\n  \t\tmodelName: 'Address',\r\n  \t\tcalledMethod: 'getAreas'\r\n  \t});\r\n  \treturn districts.data\r\n  }\r\n\r\n  getCities = async () => {\r\n  \tconst cities = await this.getResource({\r\n  \t\tmodelName: 'Address',\r\n  \t\tcalledMethod: 'getCities',\r\n  \t});\r\n\r\n  \treturn cities.data.map((city) => city.Description);\r\n  }\r\n\r\n  getCity = async (name) => {\r\n    const city = await this.getResource({\r\n      modelName: 'AddressGeneral',\r\n      calledMethod: 'getCities',\r\n      methodProperties: {\r\n        FindByString: name\r\n      }\r\n    });\r\n    return city\r\n  }\r\n\r\n  getWarehouses = async (name) => {\r\n    const warehouses = await this.getResource({\r\n      modelName: 'AddressGeneral',\r\n      calledMethod: 'getWarehouses',\r\n      methodProperties: {\r\n        Language: \"ru\",\r\n        CityName: name\r\n      }\r\n    });\r\n    return warehouses\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './app.css';\r\n\r\nimport Header from '../header';\r\nimport CitiesInput from '../cities-input';\r\nimport Warehouses from '../warehouses';\r\nimport Map from '../map';\r\nimport Details from '../details';\r\n\r\n//import { Button } from 'react-materialize';\r\n\r\nexport default () => {\r\n  return (\r\n  \t<div className='container app row'>\r\n      <Header />\r\n      <div className=\"col m12 l6 left-column\">\r\n        <CitiesInput />\r\n        <Warehouses />\r\n      </div>\r\n      <div className=\"col m12 l6 right-column\">\r\n        <Map />\r\n        <Details />\r\n      </div>\r\n    </div>\r\n  );\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.1cf18ac9.jpg\";"],"sourceRoot":""}